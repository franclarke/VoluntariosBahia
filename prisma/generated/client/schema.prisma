generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model TipoArticulo {
  id                 Int                 @id @default(autoincrement())
  nombre             String              @unique
  creadoEn           DateTime            @default(now())
  articulosOferta    ArticuloOferta[]
  articulosPeticion  ArticuloPeticion[]
  articulosSolicitud ArticuloSolicitud[]
}

model PuntoDonacion {
  id              Int              @id @default(autoincrement())
  nombre          String? // Campo opcional para el nombre del centro
  direccion       String
  responsable     String
  telefono        String?
  latitud         Float
  longitud        Float
  horarioApertura String?
  horarioCierre   String?
  descripcion     String?
  activo          Boolean          @default(true)
  creadoEn        DateTime         @default(now())
  actualizadoEn   DateTime         @updatedAt
  articulos       ArticuloOferta[]
}

model ArticuloOferta {
  id              Int           @id @default(autoincrement())
  puntoDonacionId Int
  tipoArticuloId  Int
  cantidad        Int?
  estado          String        @default("Disponible")
  creadoEn        DateTime      @default(now())
  actualizadoEn   DateTime      @updatedAt
  puntoDonacion   PuntoDonacion @relation(fields: [puntoDonacionId], references: [id], onDelete: Cascade)
  tipoArticulo    TipoArticulo  @relation(fields: [tipoArticuloId], references: [id])

  @@unique([puntoDonacionId, tipoArticuloId])
}

model Solicitud {
  id             Int                 @id @default(autoincrement())
  direccion      String
  contactoNombre String
  contactoTel    String
  estado         String              @default("Pendiente")
  latitud        Float
  longitud       Float
  descripcion    String?
  creadoEn       DateTime            @default(now())
  actualizadoEn  DateTime            @updatedAt
  articulos      ArticuloSolicitud[]
}

model ArticuloSolicitud {
  id             Int          @id @default(autoincrement())
  solicitudId    Int
  tipoArticuloId Int
  cantidad       Int
  creadoEn       DateTime     @default(now())
  solicitud      Solicitud    @relation(fields: [solicitudId], references: [id], onDelete: Cascade)
  tipoArticulo   TipoArticulo @relation(fields: [tipoArticuloId], references: [id])

  @@unique([solicitudId, tipoArticuloId])
}

model PeticionDonacion {
  id             Int                @id @default(autoincrement())
  direccion      String
  contactoNombre String
  contactoTel    String
  latitud        Float?
  longitud       Float?
  descripcion    String?
  estado         String             @default("Pendiente")
  creadoEn       DateTime           @default(now())
  actualizadoEn  DateTime           @updatedAt
  articulos      ArticuloPeticion[]
}

model ArticuloPeticion {
  id                 Int              @id @default(autoincrement())
  peticionDonacionId Int
  tipoArticuloId     Int
  cantidad           Int
  creadoEn           DateTime         @default(now())
  peticionDonacion   PeticionDonacion @relation(fields: [peticionDonacionId], references: [id], onDelete: Cascade)
  tipoArticulo       TipoArticulo     @relation(fields: [tipoArticuloId], references: [id])

  @@unique([peticionDonacionId, tipoArticuloId])
}

model SolicitudLimpieza {
  id             Int      @id @default(autoincrement())
  direccion      String
  contactoNombre String
  contactoTel    String
  estado         String   @default("Pendiente")
  latitud        Float
  longitud       Float
  descripcion    String?
  creadoEn       DateTime @default(now())
  actualizadoEn  DateTime @updatedAt
}

// Tabla para mensajes de contacto
model MensajeContacto {
  id       Int      @id @default(autoincrement())
  nombre   String
  email    String?
  telefono String?
  mensaje  String
  leido    Boolean  @default(false)
  creadoEn DateTime @default(now())
}

// Tabla para información útil
model InformacionUtil {
  id          Int      @id @default(autoincrement())
  nombre      String
  email       String?
  telefono    String
  direccion   String?
  horario     String?
  descripcion String?
  leido       Boolean  @default(false)
  creadoEn    DateTime @default(now())
}

// Mantener la tabla Mensaje para compatibilidad con código existente
// pero marcarla como obsoleta
/// @deprecated Use MensajeContacto o InformacionUtil instead
model Mensaje {
  id       Int      @id @default(autoincrement())
  nombre   String
  email    String
  telefono String?
  mensaje  String
  leido    Boolean  @default(false)
  creadoEn DateTime @default(now())
}
